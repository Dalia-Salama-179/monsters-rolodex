{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","searchHandler","App","state","searchField","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAChB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCN7BO,G,MAAY,SAACX,GACtB,OACI,uBAAOC,UAAU,SAASW,KAAK,SAASC,YAAab,EAAMa,YACvDC,SAAUd,EAAMe,kBCsCbC,E,kDAnCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,2BAG1C,SAAcE,GACZC,KAAKF,SAAS,CAACN,YAAaO,EAAEE,OAAOC,U,oBAGvC,WAAW,IAAD,OAEFC,EAAmBH,KAAKT,MAAMR,SAASqB,QAAO,SAAA3B,GAClD,GAAIA,EAAQG,KAAKyB,cAAcC,SAAS,EAAKf,MAAMC,YAAYa,eAC7D,OAAO5B,KAIX,OAAO,sBAAKF,UAAU,MAAf,UACL,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBE,cAAe,SAAAU,GAAC,OAAI,EAAKV,cAAcU,MAEhF,cAAC,EAAD,CAAUhB,SAAUoB,W,GAjCRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.62e41590.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"Monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport './card-list.styles.css'\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map(monster => {\r\n                return <Card key={monster.id} monster={monster}></Card>\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = (props) => {\r\n    return (\r\n        <input className=\"search\" type=\"search\" placeholder={props.placeholder}\r\n            onChange={props.searchHandler}/>\r\n    )\r\n};","import './App.css';\nimport React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  \n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  searchHandler(e) {\n    this.setState({searchField: e.target.value})\n  }\n\n  render () {\n    // const { monsters } = this.state;\n    const filteredMonsters = this.state.monsters.filter(monster => {\n      if (monster.name.toLowerCase().includes(this.state.searchField.toLowerCase())) {\n        return monster;\n      }\n    })\n\n    return <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder=\"Search Monsters\" searchHandler={e => this.searchHandler(e)}></SearchBox>\n\n      <CardList monsters={filteredMonsters}></CardList>\n  </div>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}